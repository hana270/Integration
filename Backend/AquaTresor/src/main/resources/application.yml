spring:
  main:
    web-application-type: servlet  # Définit explicitement le type d'application
  application:
    name: aquatresor-service
  datasource:
    url: jdbc:postgresql://localhost:5432/aquatresorbddproject
    username: postgres
    password: "123456"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 5MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: hanabelhadj27@gmail.com
    password: cebu udyr xvoo tmwu
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      adjust-dates-to-context-time-zone: true
  cloud:
    loadbalancer:
      retry:
        enabled: true
        max-retries-on-same-service-instance: 2
        max-retries-on-next-service-instance: 3
        retryable-status-codes: 500,502,503,504
    compatibility-verifier:
      enabled: false

server:
  port: 8089
  servlet:
    context-path: /aquatresor

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.example.gestionbassins.service.NotificationServiceClient: DEBUG
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO

upload:
  dir: C:/shared/imagesaccessoiresbassin/

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
    registry-fetch-interval-seconds: 10
    eureka-server-connect-timeout-seconds: 5
    eureka-server-read-timeout-seconds: 5
    eureka-connection-idle-timeout-seconds: 30
  instance:
    prefer-ip-address: false  # Changé à false pour voir le hostname
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    instance-id: ${spring.application.name}:${server.port}  # Format clair: aquatresor-service:8089
    appname: ${spring.application.name}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
    info:
      enabled: true